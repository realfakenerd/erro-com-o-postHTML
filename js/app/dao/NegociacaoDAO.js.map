{"version":3,"sources":["../../app-es6/dao/NegociacaoDAO.js"],"names":["NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","result","cursor","openCursor","negociacoes","atual","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","error","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CACQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP;AACH,6BAFD;AAGAE,oCAAQM,OAAR,GAAkB,UAACD,CAAD,EAAO;AACrBE,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,MAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAbM,CAAP;AAcH;;;8CACS;AAAA;;AACN,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;AAIA,gCAAIC,cAAc,EAAlB;AACAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,QAAQT,EAAEI,MAAF,CAASC,MAArB;AACA,oCAAII,KAAJ,EAAW;AACP,wCAAIC,OAAOD,MAAME,KAAjB;AACAH,gDAAYI,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCAJD,MAIO;AACHxB,4CAAQe,WAAR;AACH;AACJ,6BATD;AAUAF,mCAAOL,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASc,KAArB;AACAxB,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBApBM,CAAP;AAqBH;;;6CACQ;AAAA;;AACL,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKIxB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,mCAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQM,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASc,KAArB;AACAxB,uCAAO,wCAAP;AACH,6BAHD;AAIP,yBAXM,CAAP;AAYH","file":"NegociacaoDAO.js","sourcesContent":["export class NegociacaoDAO {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = (e) => {\r\n                resolve();\r\n            }\r\n            request.onerror = (e) => {\r\n                console.log(e.target.result);\r\n                reject('Não foi possível adicionar a negociação');\r\n            }\r\n        });\r\n    }\r\n    listAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n            let negociacoes = [];\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível listar as negociações');\r\n            }\r\n        });\r\n    }\r\n    delAll() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], \"readwrite\")\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n                request.onsuccess = e => resolve('Negociações apagadas com sucesso!');\r\n                request.onerror = e => {\r\n                    console.log(e.target.error);\r\n                    reject('Não foi possível apagar as negociações');\r\n                }\r\n        });\r\n    }\r\n}"]}